"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docsSidebar":[{"type":"link","label":"Introduction","href":"/project-fashion-finder/docs/intro","docId":"intro"},{"type":"category","label":"Requirements Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"System Overview","href":"/project-fashion-finder/docs/requirements/system-overview","docId":"requirements/system-overview"},{"type":"link","label":"System Block Diagram","href":"/project-fashion-finder/docs/requirements/system-block-diagram","docId":"requirements/system-block-diagram"},{"type":"link","label":"General Requirements","href":"/project-fashion-finder/docs/requirements/general-requirements","docId":"requirements/general-requirements"},{"type":"link","label":"Features and Requirements","href":"/project-fashion-finder/docs/requirements/features-and-requirements","docId":"requirements/features-and-requirements"},{"type":"link","label":"Use-case descriptions","href":"/project-fashion-finder/docs/requirements/use-case-descriptions","docId":"requirements/use-case-descriptions"}],"href":"/project-fashion-finder/docs/category/requirements-specification"},{"type":"category","label":"Software Development Plan","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Activities","href":"/project-fashion-finder/docs/development-plan/activities","docId":"development-plan/activities"},{"type":"link","label":"Tasks","href":"/project-fashion-finder/docs/development-plan/tasks","docId":"development-plan/tasks"},{"type":"link","label":"Schedule","href":"/project-fashion-finder/docs/development-plan/schedule","docId":"development-plan/schedule"},{"type":"link","label":"Development Environment","href":"/project-fashion-finder/docs/development-plan/development-environment","docId":"development-plan/development-environment"},{"type":"link","label":"Version Control","href":"/project-fashion-finder/docs/development-plan/version-control","docId":"development-plan/version-control"}],"href":"/project-fashion-finder/docs/category/software-development-plan"},{"type":"category","label":"System Architecture","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Algorithms","href":"/project-fashion-finder/docs/system-architecture/algorithms","docId":"system-architecture/algorithms"},{"type":"link","label":"design","href":"/project-fashion-finder/docs/system-architecture/design","docId":"system-architecture/design"},{"type":"link","label":"class_diagram","href":"/project-fashion-finder/docs/system-architecture/class_diagram","docId":"system-architecture/class_diagram"},{"type":"link","label":"data_flow","href":"/project-fashion-finder/docs/system-architecture/data_flow","docId":"system-architecture/data_flow"}],"href":"/project-fashion-finder/docs/category/system-architecture"},{"type":"category","label":"API Specification","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"API Specifications","href":"/project-fashion-finder/docs/api-specification/API-Specifications","docId":"api-specification/API-Specifications"},{"type":"link","label":"Class Diagram of Django CRUD API Backend","href":"/project-fashion-finder/docs/api-specification/classDiagram","docId":"api-specification/classDiagram"}],"href":"/project-fashion-finder/docs/category/api-specification"},{"type":"category","label":"Test Procedures","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Unit tests","href":"/project-fashion-finder/docs/testing/unit-testing","docId":"testing/unit-testing"},{"type":"link","label":"Integration tests","href":"/project-fashion-finder/docs/testing/integration-testing","docId":"testing/integration-testing"},{"type":"link","label":"Acceptance test","href":"/project-fashion-finder/docs/testing/acceptence-testing","docId":"testing/acceptence-testing"}],"href":"/project-fashion-finder/docs/category/test-procedures"}]},"docs":{"api-specification/API-Specifications":{"id":"api-specification/API-Specifications","title":"API Specifications","description":"API Documentation Document:","sidebar":"docsSidebar"},"api-specification/classDiagram":{"id":"api-specification/classDiagram","title":"Class Diagram of Django CRUD API Backend","description":"Class_diagram","sidebar":"docsSidebar"},"development-plan/activities":{"id":"development-plan/activities","title":"Activities","description":"Requirements Gathering","sidebar":"docsSidebar"},"development-plan/development-environment":{"id":"development-plan/development-environment","title":"Development Environment","description":"The Development environment will require both a Python runtime and npm. In our case, we used Python 3.10.6 and npm 18.0.0","sidebar":"docsSidebar"},"development-plan/schedule":{"id":"development-plan/schedule","title":"Schedule","description":"","sidebar":"docsSidebar"},"development-plan/tasks":{"id":"development-plan/tasks","title":"Tasks","description":"1. Create progressive web app UI","sidebar":"docsSidebar"},"development-plan/version-control":{"id":"development-plan/version-control","title":"Version Control","description":"Git & Github","sidebar":"docsSidebar"},"intro":{"id":"intro","title":"Introduction","description":"Fashion Finder is a web application for providing clothing and outfit recommendations based on","sidebar":"docsSidebar"},"requirements/features-and-requirements":{"id":"requirements/features-and-requirements","title":"Features and Requirements","description":"Wardrobe Tracker","sidebar":"docsSidebar"},"requirements/general-requirements":{"id":"requirements/general-requirements","title":"General Requirements","description":"A User will be required to have access to a web browser, an internet connection, and a device capable of taking photos.","sidebar":"docsSidebar"},"requirements/system-block-diagram":{"id":"requirements/system-block-diagram","title":"System Block Diagram","description":"System Block Diagram","sidebar":"docsSidebar"},"requirements/system-overview":{"id":"requirements/system-overview","title":"System Overview","description":"Project Abstract","sidebar":"docsSidebar"},"requirements/use-case-descriptions":{"id":"requirements/use-case-descriptions","title":"Use-case descriptions","description":"Use case 1: Item tracker","sidebar":"docsSidebar"},"system-architecture/algorithms":{"id":"system-architecture/algorithms","title":"Algorithms","description":"There are several algorithms, big data techniques, and machine learning algorithms present in the Fashion Finder project.","sidebar":"docsSidebar"},"system-architecture/class_diagram":{"id":"system-architecture/class_diagram","title":"class_diagram","description":"Class Diagram for Django API Backend","sidebar":"docsSidebar"},"system-architecture/data_flow":{"id":"system-architecture/data_flow","title":"data_flow","description":"Data Flow","sidebar":"docsSidebar"},"system-architecture/design":{"id":"system-architecture/design","title":"design","description":"Components and their interfaces","sidebar":"docsSidebar"},"testing/acceptence-testing":{"id":"testing/acceptence-testing","title":"Acceptance test","description":"Demonstration of all of the functional and non-functional requirements. This can be a combination of automated tests derived from the use-cases (user stories) and manual tests with recorded observation of the results.","sidebar":"docsSidebar"},"testing/integration-testing":{"id":"testing/integration-testing","title":"Integration tests","description":"Tests to demonstrate each use-case based on the use-case descriptions and the sequence diagrams. External input should be provided via mock objects and results verified via mock objects. Integration tests should not require manual entry of data nor require manual interpretation of results.","sidebar":"docsSidebar"},"testing/unit-testing":{"id":"testing/unit-testing","title":"Unit tests","description":"For each method, one or more test cases.","sidebar":"docsSidebar"}}}')}}]);