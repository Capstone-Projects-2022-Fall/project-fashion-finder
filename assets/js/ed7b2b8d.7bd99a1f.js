"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[3961],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,n,i=function(e,t){if(null==e)return{};var r,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var c=n.createContext({}),l=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=l(r),f=i,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||a;return r?n.createElement(m,s(s({ref:t},p),{},{components:r})):n.createElement(m,s({ref:t},p))}));function f(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=r.length,s=new Array(a);s[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},55531:function(e,t,r){r.r(t),r.d(t,{assets:function(){return p},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return u}});var n=r(83117),i=r(80102),a=(r(67294),r(3905)),s=["components"],o={sidebar_position:1},c=void 0,l={unversionedId:"system-architecture/design",id:"system-architecture/design",title:"design",description:"Components and their interfaces",source:"@site/docs/system-architecture/design.md",sourceDirName:"system-architecture",slug:"/system-architecture/design",permalink:"/project-fashion-finder/docs/system-architecture/design",draft:!1,editUrl:"https://github.com/Capstone-Projects-2022-Fall/project-fashion-finder/edit/main/documentation/docs/system-architecture/design.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"algorithms",permalink:"/project-fashion-finder/docs/system-architecture/algorithms"},next:{title:"class_diagram",permalink:"/project-fashion-finder/docs/system-architecture/class_diagram"}},p={},u=[{value:"Components and their interfaces",id:"components-and-their-interfaces",level:2}],d={toc:u};function f(e){var t=e.components,r=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"components-and-their-interfaces"},"Components and their interfaces"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Components")," : Client, Server, Database, User-Interface\nThe ",(0,a.kt)("strong",{parentName:"p"},"client")," will be our web-user.  Due to the functionality of our software being used as a progressive web application it will be determined if the user is using a mobile application, or web application on how the user-interface is to be displayed.  When a client loads the website it will then call processDatas() which will determine the clientType and pass that to displayUserInterface.",(0,a.kt)("br",{parentName:"p"}),"\n","When displayUserInterface is called the client will be displayed with the correct ",(0,a.kt)("strong",{parentName:"p"},"UserInterface")," where their userData will be pulled from the server after login.  The user will be displayed images which are pulled from the pinterestAPI, and will allow a user to like an item.  When a user likes an item that item is added to our database where it can than be used in machine learning to provide a user with suggestions using displaySuggestions().  When displayPriceStats() is called a request will be sent to the StockXAPI to pull this data and display it to the user.",(0,a.kt)("br",{parentName:"p"}),"\n","When a user first logs in it will make a request to the ",(0,a.kt)("strong",{parentName:"p"},"server")," where getUserData() is called to obtain the data for that user from the ",(0,a.kt)("strong",{parentName:"p"},"database"),".  The server is also responsible for processing price data, grabbing images, and providing suggestions to the user.  "),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/89498580/192659599-5811a552-537f-4d47-81b0-d8c7803ed1e7.png",alt:"Blank diagram"})))}f.isMDXComponent=!0}}]);