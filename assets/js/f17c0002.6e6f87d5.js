"use strict";(self.webpackChunktu_cis_4398_docs_template=self.webpackChunktu_cis_4398_docs_template||[]).push([[3157],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)t=o[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=i.createContext({}),c=function(e){var n=i.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(t),m=r,h=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return t?i.createElement(h,a(a({ref:n},u),{},{components:t})):i.createElement(h,a({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,a=new Array(o);a[0]=p;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,a[1]=s;for(var c=2;c<o;c++)a[c]=t[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},40099:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return d}});var i=t(83117),r=t(80102),o=(t(67294),t(3905)),a=["components"],s={sidebar_position:1},l="API Specifications",c={unversionedId:"api-specification/API-Specifications",id:"api-specification/API-Specifications",title:"API Specifications",description:"API Documentation Document:",source:"@site/docs/api-specification/API-Specifications.md",sourceDirName:"api-specification",slug:"/api-specification/API-Specifications",permalink:"/project-fashion-finder/docs/api-specification/API-Specifications",draft:!1,editUrl:"https://github.com/Capstone-Projects-2022-Fall/project-fashion-finder/edit/main/documentation/docs/api-specification/API-Specifications.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"API Specification",permalink:"/project-fashion-finder/docs/category/api-specification"},next:{title:"Class Diagram of Django API and Machine Learning Backend",permalink:"/project-fashion-finder/docs/api-specification/classDiagram"}},u={},d=[{value:"Classes - Web Interface",id:"classes---web-interface",level:2},{value:"HomePage",id:"homepage",level:3},{value:"Methods:",id:"methods",level:4},{value:"SignUp",id:"signup",level:3},{value:"Data Fields:",id:"data-fields",level:4},{value:"Email",id:"email",level:5},{value:"Password",id:"password",level:5},{value:"PhoneNumber",id:"phonenumber",level:5},{value:"firstName",id:"firstname",level:5},{value:"lastName:",id:"lastname",level:5},{value:"Methods:",id:"methods-1",level:4},{value:"Account",id:"account",level:3},{value:"Data Fields:",id:"data-fields-1",level:4},{value:"userID",id:"userid",level:5},{value:"Classes - ImgPredictionMicroservices",id:"classes---imgpredictionmicroservices",level:2},{value:"ClassPredictor",id:"classpredictor",level:2},{value:"Methods:",id:"methods-2",level:4},{value:"Mongo Driver",id:"mongo-driver",level:2},{value:"Recommendation Mongo Driver",id:"recommendation-mongo-driver",level:3},{value:"Views Driver",id:"views-driver",level:2},{value:"URLs driver",id:"urls-driver",level:2}],p={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,a);return(0,o.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"api-specifications"},"API Specifications"),(0,o.kt)("p",null,"API Documentation Document: "),(0,o.kt)("h2",{id:"classes---web-interface"},"Classes - Web Interface"),(0,o.kt)("h3",{id:"homepage"},"HomePage"),(0,o.kt)("p",null," Class Purpose: This is the first page that users will see when they visit the web page.  The purpose of this page is to give the user an understanding of the website, and to allow them to login or register to get access to the full functionality. "),(0,o.kt)("h4",{id:"methods"},"Methods:"),(0,o.kt)("p",null,"signUp()\nPurpose: to allow a user to sign up for an account\nPre-Condition: None\nPost-Condition: None\nParameters:  email, password, first name, last name\nReturn Values: none\nExceptions Thrown: Invalid Credentials\nsignIn()\nPurpose: to allow a user with an existing account to login\nPre-Condition:  the user does not have an account\nPost Condition: the user will be notified through email of account creation.\nParameters: email, password, phoneNumber, firstName, lastName\nReturn Values: none\nExceptions Thrown: user already exists"),(0,o.kt)("h3",{id:"signup"},"SignUp"),(0,o.kt)("p",null,"Class Purpose: This class is used for a user to sign up for an account.  They will enter their email, password, phoneNumber, firstName, and lastName to create their account. "),(0,o.kt)("h4",{id:"data-fields"},"Data Fields:"),(0,o.kt)("h5",{id:"email"},"Email"),(0,o.kt)("p",null,"Type: string"),(0,o.kt)("p",null,"Purpose: this is used to set the users email which will also be used for login."),(0,o.kt)("h5",{id:"password"},"Password"),(0,o.kt)("p",null,"Type: string"),(0,o.kt)("p",null,"Purpose: sets the password for account login"),(0,o.kt)("h5",{id:"phonenumber"},"PhoneNumber"),(0,o.kt)("p",null,"Type: string"),(0,o.kt)("p",null,"Purpose:  a phone number to be held under the account"),(0,o.kt)("h5",{id:"firstname"},"firstName"),(0,o.kt)("p",null,"Type: string\nPurpose: to have a name linked to each account"),(0,o.kt)("h5",{id:"lastname"},"lastName:"),(0,o.kt)("p",null,"Type: string\nPurpose: to have a name linked to each account"),(0,o.kt)("h4",{id:"methods-1"},"Methods:"),(0,o.kt)("p",null,"createAccount(email, password, phoneNumber, firstName, lastName)\nPurpose:  this is to create an account for a user and store all of the information into the database.\nPre-Condition: valid email address (not used previously)\nPost Condition: Verification email"),(0,o.kt)("h3",{id:"account"},"Account"),(0,o.kt)("p",null,"Class Purpose: The Account class corresponds to a particular user. Account settings such as the username, password, email will be associated with an account upon sign-up, and linked with a unique userID."),(0,o.kt)("h4",{id:"data-fields-1"},"Data Fields:"),(0,o.kt)("h5",{id:"userid"},"userID"),(0,o.kt)("p",null,"Type: Int"),(0,o.kt)("p",null,"Purpose: Primary Key"),(0,o.kt)("h2",{id:"classes---imgpredictionmicroservices"},"Classes - ImgPredictionMicroservices"),(0,o.kt)("h2",{id:"classpredictor"},"ClassPredictor"),(0,o.kt)("h4",{id:"methods-2"},"Methods:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"predict_class(filepath):\nPurpose: Given an image at a given filepath, open it, process it, and run it through the deployed machine learning model. Return the result\nReturns: Dict obct with keys ['labels','hex_codes','rgb_0', 'rgb_1','rgb_2']\n\nhex_to_rgb(h):\nPurpose, given a hex-code, return the rgb values accordingly\nReturns: (R, G, B)\n\nbinarizeOutput(y_pred, threshold=0.5):\nGiven a tensor with probability values, round each element to 0 or 1 depending on the threshold value\nReturns: A binary tensor\n")),(0,o.kt)("h2",{id:"mongo-driver"},"Mongo Driver"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"create_user_fashion_piece_dock(data, img_bytes):\nPurpose: Creates a pyMongo document a python dictionary and raw image data\nReturns pyMongo document for creation\n\ninsert_user_fashion_piece(mongo_doc):\nParams: mongo_doc (a pyMongo document type)\nReturns: If successful, returns ID of inserted piece. Otherwise, returns None\n\nget_wardrobe(user_id, user_name, n = 10, offset=0):\nParams: user_id, user_name (supplied from auth module).\nn: number of wardrobe items\noffset: page number (if applicable)\n")),(0,o.kt)("h3",{id:"recommendation-mongo-driver"},"Recommendation Mongo Driver"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"def calculate_min_distance_from_banned_tones(rgb, tones):\n\nPurpose: We maintain a list of banned tones that we don't want the recommendation to recommend too heavily on hex values that is close to one of these tones. We block most grey values as well popular skin tones as to avoid matching on backgrounds and other factors in the photos.\nArguments: rgb: integer array of dimension 2x3.\nArgument: tones: The list of banned tones\n\ndef get_recommendations(piece_id, user_id, user_name, n = 10):\nPurpose: Find other pieces in the `LabeledFashionPiece` collection like the users selected piece\nParam: piece_id: The MongoDb id of the piece.\nParam: user_id: The users DJango id\nParam: user_name: The users name\nParam: n: The number of recommendations to generate\n")),(0,o.kt)("h2",{id:"views-driver"},"Views Driver"),(0,o.kt)("p",null,"The views.py files contains most of the response parsing and bundling logic. Not necessary to construct a Class doc for it."),(0,o.kt)("h2",{id:"urls-driver"},"URLs driver"),(0,o.kt)("p",null,"The urls.py driver file for both the FashionFinder proJect and the fashionfinderapp app is responsible for mapping the local paths to functions in views.py."))}m.isMDXComponent=!0}}]);